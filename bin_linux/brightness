#!/usr/bin/env bash

if [ "$1" = "-h" ]; then
  echo "Changes brightness on the external monitor."
  echo "Press up/down, then Q to exit."
  exit
fi

# how much to change the brightness
step_size=5

# To see all available monitor codes, run
# sudo ddccontrol -p

function detect() {
  sudo ddccontrol -p 2> /dev/null | grep "Reading EDID and initializing DDC/CI at bus" | grep -o "dev:/dev/i2c-[0-9]"
}

function brighter() {
  sudo ddccontrol "$1" -r 0x10 -W $step_size &> /dev/null &
}

function darker() {
  sudo ddccontrol "$1" -r 0x10 -W -$step_size &> /dev/null &
}

function set() {
  sudo ddccontrol "$1" -r 0x10 -w "$2" &> /dev/null &
}

# enable sudo in a clean way that doesn't mess up the output
sudo echo foo > /dev/null
echo -n "detecting monitor setup ... "
monitor=$(detect)
if [ -z "$monitor" ]; then
  echo
  echo "Could not identify an external monitor"
  exit 1
fi
echo "$monitor"
escape_char=$(printf "\u1b")
while true; do
  read -rsn1 mode       # get 1 character
  if [[ $mode == "$escape_char" ]]; then
      read -rsn2 mode   # read 2 more chars
  fi
  case $mode in
      'q') exit ;;
      '') exit ;;
      '[A') brighter "$monitor"  ;;  # up
      '[B') darker "$monitor"    ;;  # down
      '[D') brighter "$monitor"  ;;  # left
      '[C') darker "$monitor"    ;;  # right
      '[H') set "$monitor" 100   ;;  # home
      '[F') set "$monitor" 0     ;;  # end
      *) >&2 echo 'ERR bad input'; exit ;;
  esac
done
