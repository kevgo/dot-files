#!/usr/bin/env bash
# set -x

function usage() {
  echo "Usage: ts [-f '<glob>'] [-I] [-C<num>] term1 [term2] ..."
  echo
  echo "Parameters:"
  echo "-C 1, -C2, etc: \"context\" - output the given number of lines around search results, default=0"
  echo "-f: \"files\" - glob expression describing the files to search, please wrap in quotes, default='*'"
  echo "-I: \"ignore case\" - when given, disables case insensitivity, default=case insensitive"
  echo
}

function version() {
  echo "TikiSearch v0.1"
}

if [ "$1" = "-h" ]; then
  version
  echo
  echo "Finds files that contain multiple search terms"
  echo
  usage
  exit
fi

if [ "$1" = "-v" ]; then
  version
  exit
fi

# parse parameters
glob="*"
context="-C0"
ignoreCase="-i"
while : ; do

  if [ "$1" = "-f" ]; then
    shift
    glob="$1"
    shift
    continue
  fi

  if [ "$1" = "-C" ]; then
    shift
    context="-C$1"
    shift
    continue
  fi

  if [[ $1 =~ ^-C[0-9]+$ ]]; then
    context="$1"
    shift
    continue
  fi

  if [ "$1" = "-I" ]; then
    ignoreCase=""
    shift
    continue
  fi

  break
done

if [ "$1" = "" ]; then
  echo Error: please provide terms to search for
  echo
  usage
  exit 1
fi

# find matching files
searchCmd="grep -rl $ignoreCase '$1' $glob"
colors=(yellow magenta cyan green)
filterRE="$1"
highlightRE="rg --passthru $ignoreCase --color=always --colors match:fg:blue $1"

shift
while [ -n "$1" ]; do
  searchCmd="$searchCmd | xargs -d '\n' grep -l '$1'"
  filterRE="$filterRE|$1"
  col=${colors[-1]}
  highlightRE="$highlightRE | rg --passthru $ignoreCase --color=always --colors match:fg:$col $1"
  shift
  unset 'colors[-1]'
done
searchResults=$(eval "$searchCmd")

# display matching files with content snippets
# NOTE: I write the shell commands to execute into a temp file and source that
# because Bash metaprogramming is too limited to handle pipes in eval'ed strings.
# See http://mywiki.wooledge.org/BashFAQ/050.
f="/tmp/ts.sh"
touch $f
for file in $searchResults; do
  echo "tput bold" >> $f
  echo "echo $file" >> $f
  echo "tput sgr0" >> $f
  echo "rg --line-number --color=never $ignoreCase $context '$filterRE' $file | $highlightRE" >> $f
  echo "echo" >> $f
done
source $f
rm $f
